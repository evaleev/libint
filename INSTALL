For (more) complete instructions please refer to https://github.com/evaleev/libint/wiki

The installation procedure for the impatient and/or experts:
0) create configure in the source directory:
   $ ./autogen.sh
1) create a directory for object files (you cannot build in the source directory):
   $ mkdir ../build; cd ../build
2) configure the package:
   $ ../src_dir/configure [--with-boost=$BOOST_ROOT]
   Most often you will need to specify command-line options to configure.
   To obtain a list of configure options run 'configure --help'.

then either choose path a or b:

3a) build the Libint compiler, then generate and compile a library:
   $ make
4a) optional validation of the library:
   $ make check
5a) install the compiled library:
   $ make install

3b) build the Libint compiler, then generate and package a library for redistribution
   $ make export
   this produces a tarball with a Libint library that can be unpacked, configured, and compiled elsewhere.

Building the Python module
---------------------------
Configure libint (Step 2) with `--enable-eri2 --enable-eri3`, export (Step 3b), untar exported archive:
 $ cmake -DPython_EXECUTABLE=`which python3` -DLIBINT2_PYTHON=ON -DCMAKE_PREFIX_PATH=$EIGEN_INSTALL_PATH -DCMAKE_INSTALL_PREFIX=<install-path> .
 $ cd python
 $ make
 $ cd .. && make install

 $ cd python

Run tests:
 $ pip3 install numpy scipy wheel requests 
 $ make test

To install the python module:
 $ make libint2-python-wheel
 $ pip3 install dist/libint2-*.whl

To uninstall: pip3 uninstall libint2
