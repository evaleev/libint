# libint2-config.cmake
# -------------------
#
# Libint2 cmake module.
# This module sets the following variables in your project:
#
# ::
#
#   Libint2_FOUND - true if Libint2 and all required components found on the system
#   Libint2_VERSION - Libint2 version in format Major.Minor.Release
#   Libint2_INCLUDE_DIRS - Directories where Libint2 and libderiv headers are located.
#   Libint2_INCLUDE_DIR - same as DIRS
#   Libint2_LIBRARIES - Libint2 and libderiv libraries to link against.
#   Libint2_LIBRARY - same as LIBRARIES
#   Libint2_MAX_AM_ERI - maximum angular momentum level of Libint2 libraries
#
#
# Available components:
#
# ::
#
#   shared - search for only shared library
#   static - search for only static library
#
#   onebody_dD_lL    - search for library including 1-body integrals with derivative order D (D=0..4) and max angular momentum up to L (L=2..10)
#   eri_cC_dD_lL     - search for library including 2-body integrals with C centers, derivative order D (D=0..4), and max angular momentum up to L (L=2..10)
#
#                   cart       shell_set  used_by
#                   --------   ---------  -------
#   ss - search for standard + standard = mpqc4, psi4
#   so - search for          + orca
#   is - search for intv3    + standard = mpqc3
#   io - search for          + orca
#   gs - search for gamess   + standard = gamess
#   go - search for          + orca
#   os - search for orca     + standard
#   oo - search for          + orca     = orca
#   bs - search for bagel    + standard = bagel
#   bo - search for          + orca
#
#
# Exported targets:
#
# ::
#
# If Libint2 is found, this module defines the following :prop_tgt:`IMPORTED`
# targets. ::
#
##   Libint2::int2 - library only
#   Libint2::cxx - library + C++11 API
#
#
# Suggested usage:
#
# ::
#
#   find_package(Libint2)
#   find_package(Libint2 2.7.0 CONFIG REQUIRED COMPONENTS shared ss eri_c4_d0_l5 eri_c4_d1_l4)
#
#
# The following variables can be set to guide the search for this package:
#
# ::
#
#   Libint2_DIR - CMake variable, set to directory containing this Config file
#   CMAKE_PREFIX_PATH - CMake variable, set to root directory of this package
#   PATH - environment variable, set to bin directory of this package
#   CMAKE_DISABLE_FIND_PACKAGE_Libint2 - CMake variable, disables
#     find_package(Libint2) when not REQUIRED, perhaps to force internal build

@PACKAGE_INIT@

set(PN Libint2)  # ProjectName
set(pnv libint2)  # projectnameversion
set(NS Libint2)  # NameSpace
set (_valid_components
    static
    shared

    eri_c4_d0_l2
    eri_c4_d0_l3
    eri_c4_d0_l4
    eri_c4_d0_l5
    eri_c4_d0_l6
    eri_c4_d0_l7
    eri_c4_d0_l8
    eri_c4_d0_l9
    eri_c4_d0_l10
    eri_c4_d1_l2
    eri_c4_d1_l3
    eri_c4_d1_l4
    eri_c4_d1_l5
    eri_c4_d1_l6
    eri_c4_d1_l7
    eri_c4_d1_l8
    eri_c4_d1_l9
    eri_c4_d1_l10
    eri_c4_d2_l2
    eri_c4_d2_l3
    eri_c4_d2_l4
    eri_c4_d2_l5
    eri_c4_d2_l6
    eri_c4_d2_l7
    eri_c4_d2_l8
    eri_c4_d2_l9
    eri_c4_d2_l10

    eri_c3_d0_l2
    eri_c3_d0_l3
    eri_c3_d0_l4
    eri_c3_d0_l5
    eri_c3_d0_l6
    eri_c3_d0_l7
    eri_c3_d0_l8
    eri_c3_d0_l9
    eri_c3_d0_l10
    eri_c3_d1_l2
    eri_c3_d1_l3
    eri_c3_d1_l4
    eri_c3_d1_l5
    eri_c3_d1_l6
    eri_c3_d1_l7
    eri_c3_d1_l8
    eri_c3_d1_l9
    eri_c3_d1_l10
    eri_c3_d2_l2
    eri_c3_d2_l3
    eri_c3_d2_l4
    eri_c3_d2_l5
    eri_c3_d2_l6
    eri_c3_d2_l7
    eri_c3_d2_l8
    eri_c3_d2_l9
    eri_c3_d2_l10

    eri_c2_d0_l2
    eri_c2_d0_l3
    eri_c2_d0_l4
    eri_c2_d0_l5
    eri_c2_d0_l6
    eri_c2_d0_l7
    eri_c2_d0_l8
    eri_c2_d0_l9
    eri_c2_d0_l10
    eri_c2_d1_l2
    eri_c2_d1_l3
    eri_c2_d1_l4
    eri_c2_d1_l5
    eri_c2_d1_l6
    eri_c2_d1_l7
    eri_c2_d1_l8
    eri_c2_d1_l9
    eri_c2_d1_l10
    eri_c2_d2_l2
    eri_c2_d2_l3
    eri_c2_d2_l4
    eri_c2_d2_l5
    eri_c2_d2_l6
    eri_c2_d2_l7
    eri_c2_d2_l8
    eri_c2_d2_l9
    eri_c2_d2_l10

    ss
    so
    is
    io
    gs
    go
    os
    oo
    bs
    bo
)

# check library style component
if(@BUILD_SHARED_LIBS@)
    set(${PN}_shared_FOUND 1)
endif()
if(@BUILD_STATIC_LIBS@)
    set(${PN}_static_FOUND 1)
endif()
list(FIND ${PN}_FIND_COMPONENTS "shared" _seek_shared)
list(FIND ${PN}_FIND_COMPONENTS "static" _seek_static)

# check AM & derivative component
set(${PN}_MAX_AM_ERI @Libint2_MAX_AM_ERI@)
foreach(_eri @Libint2_ERI_COMPONENTS@)
    set(${PN}_${_eri}_FOUND 1)
endforeach()

# check orderings component
if    ((@LIBINT_SHGSHELL_ORDERING@ EQUAL 1) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 1) AND (@LIBINT_SHELL_SET@ EQUAL 1))
    set(_ordering "sss")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 1) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 1) AND (@LIBINT_SHELL_SET@ EQUAL 2))
    set(_ordering "sso")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 1) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 2) AND (@LIBINT_SHELL_SET@ EQUAL 1))
    set(_ordering "sis")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 1) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 2) AND (@LIBINT_SHELL_SET@ EQUAL 2))
    set(_ordering "sio")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 1) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 3) AND (@LIBINT_SHELL_SET@ EQUAL 1))
    set(_ordering "sgs")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 1) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 3) AND (@LIBINT_SHELL_SET@ EQUAL 2))
    set(_ordering "sgo")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 1) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 4) AND (@LIBINT_SHELL_SET@ EQUAL 1))
    set(_ordering "sos")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 1) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 4) AND (@LIBINT_SHELL_SET@ EQUAL 2))
    set(_ordering "soo")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 1) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 5) AND (@LIBINT_SHELL_SET@ EQUAL 1))
    set(_ordering "sbs")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 1) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 5) AND (@LIBINT_SHELL_SET@ EQUAL 2))
    set(_ordering "sbo")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 2) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 1) AND (@LIBINT_SHELL_SET@ EQUAL 1))
    set(_ordering "gss")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 2) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 1) AND (@LIBINT_SHELL_SET@ EQUAL 2))
    set(_ordering "gso")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 2) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 2) AND (@LIBINT_SHELL_SET@ EQUAL 1))
    set(_ordering "gis")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 2) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 2) AND (@LIBINT_SHELL_SET@ EQUAL 2))
    set(_ordering "gio")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 2) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 3) AND (@LIBINT_SHELL_SET@ EQUAL 1))
    set(_ordering "ggs")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 2) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 3) AND (@LIBINT_SHELL_SET@ EQUAL 2))
    set(_ordering "ggo")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 2) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 4) AND (@LIBINT_SHELL_SET@ EQUAL 1))
    set(_ordering "gos")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 2) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 4) AND (@LIBINT_SHELL_SET@ EQUAL 2))
    set(_ordering "goo")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 2) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 5) AND (@LIBINT_SHELL_SET@ EQUAL 1))
    set(_ordering "gbs")
elseif((@LIBINT_SHGSHELL_ORDERING@ EQUAL 2) AND (@LIBINT_CGSHELL_ORDERING@ EQUAL 5) AND (@LIBINT_SHELL_SET@ EQUAL 2))
    set(_ordering "gbo")
else()
    message(STATUS "${PN}Config: indeterminate orderings")
endif()
set(${PN}_${_ordering}_FOUND 1)


# thanks, https://stackoverflow.com/a/9328525
function(dump_cmake_variables)
    get_cmake_property(_variableNames VARIABLES)
    list (SORT _variableNames)
    set(founds "")
    foreach (_variableName ${_variableNames})
        if (ARGV0)
            unset(MATCHED)
            string(REGEX MATCH ${ARGV0} MATCHED ${_variableName})
            if (NOT MATCHED)
                continue()
            endif()
            if (NOT ${${_variableName}})
                continue()
            endif()
        endif()
        list(APPEND found ${CMAKE_MATCH_1})
    endforeach()
    message(STATUS "${ARGV1}${found}")
endfunction()


if(NOT CMAKE_REQUIRED_QUIET)
    message(STATUS "${PN}Config components requested: ${${PN}_FIND_COMPONENTS}")
    dump_cmake_variables("^Libint2_([A-Za-z0-9_]+)_FOUND$" "${PN}Config components found: ")
endif()

check_required_components(${PN})

# make detectable the various cmake modules exported alongside
list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})

#-----------------------------------------------------------------------------
# Don't include targets if this file is being picked up by another
# project which has already built this as a subproject
#-----------------------------------------------------------------------------
if(NOT TARGET ${NS}::cxx)
    if(_seek_static GREATER -1)
        include("${CMAKE_CURRENT_LIST_DIR}/${pnv}-targets-static.cmake")
    elseif(_seek_shared GREATER -1)
        include("${CMAKE_CURRENT_LIST_DIR}/${pnv}-targets-shared.cmake")
    elseif(@BUILD_SHARED_LIBS@)
        include("${CMAKE_CURRENT_LIST_DIR}/${pnv}-targets-shared.cmake")
    elseif(@BUILD_STATIC_LIBS@)
        include("${CMAKE_CURRENT_LIST_DIR}/${pnv}-targets-static.cmake")
    endif()

    include(CMakeFindDependencyMacro)
    if (@LIBINT_HAS_SYSTEM_BOOST_PREPROCESSOR_VARIADICS@)
        # Boost headers _not_ unpacked to within `include/libint2/`
        if (NOT TARGET Boost::headers)
            find_dependency(Boost 1.57 REQUIRED)
        endif()
    endif()

    get_property(_loc TARGET ${NS}::cxx PROPERTY LOCATION)
    set(${PN}_LIBRARY ${_loc})
    get_property(_ill TARGET ${NS}::cxx PROPERTY INTERFACE_LINK_LIBRARIES)
    set(${PN}_LIBRARIES ${_ill})

    get_property(_id TARGET ${NS}::cxx PROPERTY INCLUDE_DIRECTORIES)
    set(${PN}_INCLUDE_DIR ${_id})
    get_property(_iid TARGET ${NS}::cxx PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
    set(${PN}_INCLUDE_DIRS ${_iid})

    #message("Libint2::cxx")
    #message("loc ${_loc}")
    #message("ill ${_ill}")
    #message("id  ${_id}")
    #message("iid ${_iid}")
endif()
